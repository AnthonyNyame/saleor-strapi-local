{{- if .Values.knativeDeploy }}
{{- else }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "strapi-cms"
  labels:
    app: {{ .Values.release }}
    draft: {{ default "draft-app" .Values.draft }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    app.kubernetes.io/name: {{ .Values.release }}
    app.kubernetes.io/instance: {{ .Values.release }}
    {{- if .Chart.AppVersion }}
    app.kubernetes.io/version: {{ .Chart.AppVersion | quote }}
    {{- end }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.release }}
      # app.kubernetes.io/name: {{ .Values.release }}
      # app.kubernetes.io/instance: {{ .Values.release }}
      draft: {{ default "draft-app" .Values.draft }}
      # chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
      # helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
{{- if .Values.hpa.enabled }}
{{- else }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  template:
    metadata:
      labels:
        draft: {{ default "draft-app" .Values.draft }}
        app: {{ .Values.release }}
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      initContainers:
        - name: "{{ .Chart.Name }}-init-1"
          image: "bitnami/postgresql:11.9.0-debian-10-r73"
          imagePullPolicy: "IfNotPresent"
          env:
            - name: PGPASSWORD
              value: {{ .Values.env.DATABASE_PASSWORD }}       
          command:
            - /bin/bash
            - -c
            # - psql -U postgres -tc "SELECT 1 FROM pg_database WHERE datname = 'strapi'" | grep -q 1 | psql -U postgres -c "CREATE DATABASE strapi"
            - psql -h {{ .Values.env.DATABASE_HOST }} -U postgres -d saleor-db -c "SELECT 'CREATE DATABASE strapi'WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'strapi')"
            - if (psql -h {{ .Values.env.DATABASE_HOST }} -U postgres -d saleor-db -c "select count(*) from pg_class c join pg_namespace s on s.oid = c.relnamespace where s.nspname not in ('pg_catalog', 'information_schema') and s.nspname not like 'pg_temp%';");then echo "database has tables"
            - echo "Nttdata12345" | pg_dump -h saleor-db.cnriqanxmgua.eu-west-2.rds.amazonaws.com -p 5432 -d strapi -U postgres -W -f strapi.dump
            - psql postgres://postgres:{{ .Values.env.DATABASE_PASSWORD }}@{{ .Values.env.DATABASE_HOST }}:5432/strapi < strapi.dump  
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }} 
        env:
{{- range $pkey, $pval := .Values.env }}
        - name: {{ $pkey }}
          value: {{ quote $pval }}
{{- end }}
        envFrom:
{{ toYaml .Values.envFrom | indent 10 }}
        ports:
        - containerPort: {{ .Values.service.internalPort }}
#        livenessProbe:
#          httpGet:
#            path: {{ .Values.probePath }}
#            port: {{ .Values.service.internalPort }}
#          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
#          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
#          successThreshold: {{ .Values.livenessProbe.successThreshold }}
#          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
#        readinessProbe:
#          httpGet:
#            path: {{ .Values.probePath }}
#            port: {{ .Values.service.internalPort }}
#          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
#          successThreshold: {{ .Values.readinessProbe.successThreshold }}
#          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
{{- if .Values.usePersistence }}
        volumeMounts:
        - name: strapi-volume
          mountPath: "/public/uploads"
        - name: strapi-api-volume
          mountPath: "/app/api"
      volumes:
      - name: strapi-volume
        persistentVolumeClaim:
          claimName: strapi-volume
      - name: strapi-api-volume
        persistentVolumeClaim:
          claimName: strapi-api-volume

{{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
{{- end }}
